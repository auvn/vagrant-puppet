$cm_version = '4.8.0'

define append_if_no_such_line($file, $line, $refreshonly = 'false') {
    exec { "/bin/echo '$line' >> '$file'":
        unless      => "/bin/grep -Fxqe '$line' '$file'",
        path        => "/bin",
        refreshonly => $refreshonly,
    }
}

node default {
    include sudo

    sudo::conf { 'wheel':
        priority  => 10,
        content   => "%wheel    ALL=(ALL)   NOPASSWD: ALL\n",
    }

    class { timezone:
        zone => "Europe/Moscow",
    }

    class { 'selinux':
        mode => 'disabled',
    }

    service { "iptables":
        enable => false,
        ensure => stopped,
        hasrestart => true,
        hasstatus => true,
    }

    service { "ip6tables":
        enable => false,
        ensure => stopped,
        hasrestart => true,
        hasstatus => true,
    }

    append_if_no_such_line { sysctl_all_ipv6:
      file => "/etc/sysctl.conf",
      line => "net.ipv6.conf.all.disable_ipv6 = 1"
    }

    append_if_no_such_line { sysctl_default_ipv6:
      file => "/etc/sysctl.conf",
      line => "net.ipv6.conf.default.disable_ipv6 = 1"
    }
	
    class { 'java':
        distribution => 'jre',
    }

    file { '$app_directory':
        ensure => 'directory',
        owner => 'root',
        group => 'wheel',
        mode => 777
    }

}


node '$master_name.localdomain' inherits default {
    class { 'haproxy': }
    haproxy::listen { 
        '$master_name':
        collect_exported => false,
        ipaddress        => '$master_ip',
        ports            => '$master_port',
    }

    haproxy::balancermember { 
        '$slave1_name':
    
        listening_service => '$master_name',
        server_names      => '$slave1_name.localdomain',
        ipaddresses       => '$slave1_ip',
        ports             => '$master_port',
        options           => 'check',
    }
 
    haproxy::balancermember { 
        '$slave2_name':   
        listening_service => '$master_name',
        server_names      => '$slave2_name.localdomain',
        ipaddresses       => '$slave2_ip',
        ports             => '$master_port',
        options           => 'check',
    }

	
}

node '$slave1_name.localdomain' inherits default {

}
node '$slave2_name.localdomain' inherits default {

}
