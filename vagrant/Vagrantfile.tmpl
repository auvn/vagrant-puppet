
VM_MEM = "<[vm_mem]>"
VM_BOX_NAME = "<[vm_box_name]>"

HOST_SCRIPT = <<SCRIPT
#!/bin/bash
cat > /etc/hosts <<EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

<[hosts[master][ip]]> <[hosts[master][name]]>.localdomain <[hosts[master][name]]>
<[hosts[slave1][ip]]> <[hosts[slave1][name]]>.localdomain <[hosts[slave1][name]]>
<[hosts[slave2][ip]]> <[hosts[slave2][name]]>.localdomain <[hosts[slave2][name]]>
EOF
mkdir -p /var/lib/hiera
cat > /var/lib/hiera/defaults.yaml <<EOF
---
controlled_shutdown_enable: 'true'
EOF
SCRIPT

API_VERSION = "2"
Vagrant.configure(API_VERSION) do |config|
  config.ssh.username = "<[ssh_user]>"

  config.vm.define :master do |c|
    c.vm.box = VM_BOX_NAME
    c.vm.provider :virtualbox do |v|
      v.name = "<[hosts[master][name]]>"
      v.customize ["modifyvm", :id, "--memory", VM_MEM]
    end
    c.vm.hostname = "<[hosts[master][name]]>.localdomain"
    c.vm.network :private_network, ip: "<[hosts[master][ip]]>"
  end

  config.vm.define :slave1 do |c|
    c.vm.box = VM_BOX_NAME
    c.vm.provider :virtualbox do |v|
      v.name = "<[hosts[slave1][name]]>"
      v.customize ["modifyvm", :id, "--memory", VM_MEM]
    end
    c.vm.hostname = "<[hosts[slave1][name]]>.localdomain"
    c.vm.network :private_network, ip: "<[hosts[slave1][ip]]>"
  end

  config.vm.define :slave2 do |c|
    c.vm.box = VM_BOX_NAME
    c.vm.provider :virtualbox do |v|
      v.name = "<[hosts[slave2][name]]>"
      v.customize ["modifyvm", :id, "--memory", VM_MEM]
    end
    c.vm.hostname = "<[hosts[slave2][name]]>.localdomain"
    c.vm.network :private_network, ip: "<[hosts[slave2][ip]]>"
  end


  config.vm.provision :shell, :inline => HOST_SCRIPT
  config.vm.provision :puppet do |puppet|
    puppet.manifests_path = '../puppet/manifests'
    puppet.manifest_file = 'site.pp'
    puppet.module_path = '../puppet/modules'
    puppet.options = '--verbose --debug'
    puppet.facter = {
        "os_maj_version"  => '6',
        "architecture"    => 'x86_64'
    }
  end
end
